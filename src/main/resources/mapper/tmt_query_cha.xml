<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sql.tmt.mapper.cha">

	<select id="getStat" parameterType="string" resultType="map">
		SELECT DATE2,
		SUM(CASE WHEN PRICE<![CDATA[<=]]>
		0 THEN price ELSE 0 END) AS expense,
		SUM(CASE WHEN PRICE<![CDATA[>]]>
		0 THEN price ELSE 0 END) AS income
		FROM (SELECT TO_CHAR(TIME,
		'YYYY-MM-DD') AS DATE2, price FROM ACCOUNT_BOOK WHERE
		GENERAL_ID=#{VALUE})
		GROUP BY DATE2
	</select>

	<resultMap type="DiscountCalendar"
		id="discountCalendarResultMap">
		<id property="discountSeq" column="discount_seq" />
		<result property="startDate" column="start_date" />
		<result property="endDate" column="end_date" />
		<result property="brand" column="brand" />
		<result property="discountContent" column="discount_content" />
		<result property="url" column="url" />
		<result property="calendarLike" column="calendar_like" />
		<result property="consumptionCat" column="consumption_cat" />
	</resultMap>

	<resultMap type="AccountBook" id="accountBookResultMap">
		<id property="accountBookSeq" column="account_book_seq" />
		<result property="generalId" column="general_id" />
		<result property="accountContent" column="account_content" />
		<result property="time" column="time" />
		<result property="price" column="price" />
		<result property="memo" column="memo" />
		<result property="url" column="url" />
		<result property="discountSeq" column="discount_seq" />
		<result property="emoji" column="emoji" />
		<result property="consumptionCat" column="consumption_cat" />
	</resultMap>




	<insert id="registerGeneralDiscountCalendar"
		parameterType="discountCalendar">
		INSERT INTO
		DISCOUNT_CALENDAR(discount_seq, start_date,
		end_date, brand, discount_content, url,
		image_path, consumption_cat)
		VALUES(
		discount_seq.nextval,
		#{startDate},
		#{endDate},
		#{brand},
		#{discountContent},
		#{url},
		#{imagePath},
		#{consumptionCat}
		)
	</insert>

	<insert id="registerBusinessDiscountCalendar"
		parameterType="discountCalendar">
		INSERT
		INTO discount_calendar(discount_seq,start_date,
		end_date,brand, discount_content, url, image_path,consumption_cat)
		VALUES(discount_seq.nextval,
		#{startDate},
		#{endDate},
		#{brand},
		#{discountContent},
		#{url},
		#{imagePath},
		#{consumptionCat}
		)
	</insert>

	<update id="updateCalendarLike" parameterType="discountCalendar">
		UPDATE discount_calendar
		SET calendar_like = #{calendarLike}
		WHERE discount_seq = #{discountSeq}
	</update>

	<update id="updateBusinessDiscountCalendar"
		parameterType="discountCalendar">
		UPDATE DISCOUNT_CALENDAR
		SET start_date = #{startDate},
		end_date = #{endDate},
		brand = #{brand},
		discount_content =
		#{discountContent},
		url = #{url},
		image_path = #{imagePath},
		calendar_like = #{calendarLike},
		consumption_cat = #{consumptionCat}
		WHERE discount_seq=#{discountSeq}
	</update>


	<update id="updateDiscountCalendar" parameterType="discountCalendar">
		UPDATE DISCOUNT_CALENDAR
		SET start_date = #{startDate},
		end_date = #{endDate},
		brand = #{brand},
		discount_content =
		#{discountContent},
		consumption_cat = #{consumptionCat}
		WHERE
		discount_seq=#{discountSeq}
	</update>
	

	<delete id="deleteDiscountCalendar" parameterType="long">
		DELETE
		FROM
		DISCOUNT_CALENDAR
		WHERE
		discount_seq = #{VALUE}
	</delete>

	<select id="getDiscountCalendarByDate" resultMap="discountCalendarResultMap" parameterType="string">
		select * from discount_calendar 
		where start_date <![CDATA[<=]]> #{VALUE}
		and end_date <![CDATA[>=]]> #{VALUE}
	</select>

	<select id="getDiscountCalendar"
		resultMap="discountCalendarResultMap">
		SELECT
		discount_seq,start_date,
		end_date,brand,
		discount_content, url,
		image_path, calendar_like
		,consumption_cat
		FROM
		DISCOUNT_CALENDAR
	</select>

	<select id="getDiscountCalendarbySeq"
		resultMap="discountCalendarResultMap" parameterType="long">
		SELECT
		discount_seq,start_date,
		end_date,brand,
		discount_content, url,
		image_path, calendar_like
		,consumption_cat
		FROM
		DISCOUNT_CALENDAR
		WHERE
		discount_seq = #{discountSeq}
	</select>
	
	<select id="getMyTickle" resultType="long" parameterType="string">
		SELECT count(-1) FROM account_book
		WHERE general_id = #{VALUE}
		AND discount_seq is not null
		AND EXTRACT(MONTH FROM time) = EXTRACT(MONTH FROM SYSDATE)
  		AND EXTRACT(YEAR FROM time) = EXTRACT(YEAR FROM SYSDATE)
	</select>

	<insert id="registerAccountBook" parameterType="accountBook">
		INSERT INTO
		ACCOUNT_BOOK(account_book_seq, general_id, account_content, time,
		price, memo,
		discount_seq, emoji ,consumption_cat)
		VALUES(
		account_book_seq.nextval,
		#{generalId},
		#{accountContent},
		#{time},
		#{price},
		#{memo},
		#{discountSeq},
		#{emoji},
		#{consumptionCat}
		)
	</insert>

	<update id="updateAccountBook" parameterType="accountBook">
		UPDATE Account_Book
		SET 
		account_content = #{accountContent},
		time = #{time},
		price = #{price},
		memo = #{memo},
		discount_seq = #{discountSeq},
		emoji = #{emoji},
		consumption_cat = #{consumptionCat}
		WHERE account_book_seq = #{accountBookSeq} AND general_id = #{generalId}
	</update>

	<delete id="deleteAccountBook" parameterType="long">
		DELETE
		FROM
		Account_Book
		WHERE
		account_book_seq = #{VALUE}
	</delete>

	<select id="getAccountBook" resultMap="accountBookResultMap">
		SELECT
		account_book_seq,
		general_id, account_content, time, price, memo,
		discount_seq, emoji
		,consumption_cat
		FROM Account_Book
		WHERE general_id=#{generalId}
	</select>

	<select id="dailyAccountBook" resultMap="accountBookResultMap">
		SELECT
		account_book_seq,
		general_id, account_content, time, price, memo,
		discount_seq, emoji
		,consumption_cat
		FROM Account_Book
		WHERE TO_CHAR(TIME,
		'YYYY-MM-DD') LIKE
		'%' || #{time} || '%'
	</select>
	
	<select id="personalDailyAccountBook" resultMap="accountBookResultMap" parameterType="accountBook">
		SELECT
		account_book_seq,
		general_id, account_content, time, price, memo,
		discount_seq, emoji
		,consumption_cat
		FROM Account_Book
		WHERE  general_id=#{generalId} AND TO_CHAR(TIME,
		'YYYY-MM-DD') LIKE '%' || #{time} || '%' 
	</select>
	
	<select id = "checkIsUsed" resultType = "long" parameterType="accountBook">
		SELECT discount_seq 
		FROM Account_Book
		WHERE discount_seq = #{discountSeq} and general_Id = #{generalId}
	</select>
	
	<update id="registerDiscountCalendarInfo" parameterType="accountBook">
		UPDATE account_book
		SET discount_seq = #{discountSeq} 
		WHERE account_book_seq = #{accountBookSeq} 
	</update>
	

	<!-- ========================= Reported =============================== -->
	<resultMap type="reported" id="reportedResultMap">
		<id property="reportedSeq" column="reported_seq" />
		<result property="status" column="status" />
		<result property="reportedFlag" column="reported_flag" />
	</resultMap>

	<select id="getReported" resultMap="reportedResultMap">
		SELECT
		target_seq,
		status,
		reported_flag
		FROM Reported
	</select>
	
	<select id="getReportOne" resultType="reported" parameterType="reported">
		SELECT target_seq, status, reported_flag
		FROM Reported
		where target_seq=#{targetSeq} AND reported_flag = #{reportedFlag}
	</select>

	<select id="getReportDetailUsingStatus" resultMap="reportedResultMap" parameterType="int">
		select target_seq, status, reported_flag
		FROM Reported
		where status = #{VALUE}
	</select>
	<select id="getReportDetailUsingFlag" resultMap="reportedResultMap" parameterType="int">
		select target_seq, status, reported_flag
		FROM Reported
		where reported_flag = #{VALUE}
	</select>

	<insert id="registerReported" parameterType="reported">
		INSERT INTO
		reported(target_seq, status, reported_flag)
		VALUES(
		#{targetSeq},
		#{status},
		#{reportedFlag}
		)
	</insert>

	<update id="updateReported" parameterType="reported">
		UPDATE Reported
		SET
		status = #{status}
		WHERE target_seq=#{targetSeq} AND reported_flag = #{reportedFlag}
	</update>

	<delete id="deleteReported" parameterType="reported">
		DELETE FROM reported
		WHERE target_seq=#{targetSeq} AND reported_flag = #{reportedFlag}
	</delete>


</mapper>